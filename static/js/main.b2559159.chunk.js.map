{"version":3,"sources":["logo.svg","CustomDraftTable.js","index.js"],"names":["EditableContext","createContext","EditableRow","index","props","Form","useForm","form","component","Provider","value","EditableCell","title","editable","children","dataIndex","record","handleSave","restProps","useState","editing","setEditing","inputRef","useRef","useContext","useEffect","current","focus","toggleEdit","setFieldsValue","save","e","a","validateFields","values","console","log","childNode","Item","style","margin","outline","border","name","className","ref","onPressEnter","onBlur","padding","onClick","cols","CustomDraftTable","setSearchText","setSearchedColumn","loading","setLoading","data","setData","selectedRowsDefault","setSelectedRowsDefault","igStatic","setIgStatic","igVideo","setIgVideo","igtv","setIgtv","igReels","setIgReels","igStory","setIgStory","setYtStory","setYtVideo","isInstaPresent","setIsInstaPresent","isYoutubePresent","setIsYoutubePresent","filteredColumns","setFilteredColumns","temp","i","push","key","age","igStaticLink","street","building","selected","number","companyAddress","companyName","gender","tem","forEach","item","searchInput","rowSelection","selectedRowKeys","onChange","selectedRows","getCheckboxProps","disabled","handleSearch","selectedKeys","confirm","row","newData","findIndex","splice","handleReset","clearFilters","columnData","hidden","width","filterDropdown","setSelectedKeys","placeholder","target","marginBottom","display","type","icon","SearchOutlined","size","filterIcon","filtered","color","undefined","onFilter","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","fixed","render","link","text","components","body","cell","total","filter","iCol","tempCol","innerTemp","innerTempCol","col","innerChild","innerItem","indexOf","filterColumns","columns","map","innerChildren","onCell","child","onRow","rowIndex","rowClassName","dataSource","scroll","x","y","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2559159.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport { Table, Input, Button, Space, Form } from \"antd\";\nimport Highlighter from \"react-highlight-words\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport React, {\n  useState,\n  useRef,\n  useContext,\n  createContext,\n  useEffect,\n} from \"react\";\n\nconst EditableContext = createContext();\n\nconst EditableRow = ({ index, ...props }) => {\n  const [form] = Form.useForm();\n  return (\n    <Form form={form} component={false}>\n      <EditableContext.Provider value={form}>\n        <tr {...props} />\n      </EditableContext.Provider>\n    </Form>\n  );\n};\n\nconst EditableCell = ({\n  title,\n  editable,\n  children,\n  dataIndex,\n  record,\n  handleSave,\n  ...restProps\n}) => {\n  const [editing, setEditing] = useState(false);\n  const inputRef = useRef();\n  const form = useContext(EditableContext);\n  useEffect(() => {\n    if (editing) {\n      inputRef.current.focus();\n    }\n  }, [editing]);\n\n  const toggleEdit = () => {\n    setEditing(!editing);\n    form.setFieldsValue({\n      [dataIndex]: record[dataIndex],\n    });\n  };\n\n  const save = async (e) => {\n    try {\n      const values = await form.validateFields();\n      toggleEdit();\n      handleSave({ ...record, ...values });\n    } catch (errInfo) {\n      console.log(\"Save failed:\", errInfo);\n    }\n  };\n\n  let childNode = children;\n\n  // console.log(children);\n\n  if (editable) {\n    childNode = editing ? (\n      <Form.Item\n        style={{\n          margin: 0,\n          outline: \"none\",\n          border: \"none\",\n        }}\n        name={dataIndex}\n        // rules={[\n        //   {\n        //     required: true,\n        //     message: `${title} is required.`,\n        //   },\n        // ]}\n      >\n        <Input\n          className=\"custom-input-field\"\n          ref={inputRef}\n          onPressEnter={save}\n          onBlur={save}\n        />\n      </Form.Item>\n    ) : (\n      <div\n        className=\"editable-cell-value-wrap\"\n        style={{\n          padding: 5,\n        }}\n        onClick={toggleEdit}\n      >\n        {children}\n      </div>\n    );\n  }\n\n  return <td {...restProps}>{childNode}</td>;\n};\n\nconst cols = [\n  \"brandLinks\",\n  \"ytStory\",\n  \"ytVideo\",\n  \"igStatic\",\n  \"igVideo\",\n  \"igtv\",\n  \"igStory\",\n  \"igReel\",\n];\n\nconst CustomDraftTable = () => {\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchedColumn, setSearchedColumn] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  const [data, setData] = useState([]);\n  const [selectedRowsDefault, setSelectedRowsDefault] = useState([]);\n\n  const [igStatic, setIgStatic] = useState(false);\n  const [igVideo, setIgVideo] = useState(false);\n  const [igtv, setIgtv] = useState(false);\n  const [igReels, setIgReels] = useState(false);\n  const [igStory, setIgStory] = useState(false);\n  const [ytStory, setYtStory] = useState(false);\n  const [ytVideo, setYtVideo] = useState(false);\n\n  const [isInstaPresent, setIsInstaPresent] = useState(false);\n  const [isYoutubePresent, setIsYoutubePresent] = useState(false);\n\n  const [filteredColumns, setFilteredColumns] = useState([]);\n\n  useEffect(() => {\n    let temp = [];\n    for (let i = 0; i < 50; i++) {\n      temp.push({\n        key: i,\n        name: \"John Brown \" + i,\n        age: i + 1,\n        igStaticLink: \"-\",\n        street: \"Lake Park\",\n        igtv: \"IGTV\",\n        building: \"C\",\n        selected: i % 2 === 0 ? true : false,\n        number: 2035 + i,\n        companyAddress: \"Lake Street 42\",\n        companyName: \"SoftLake Co\",\n        gender: \"M\",\n      });\n    }\n    setData(temp);\n    let tem = [];\n    temp.forEach((item) => {\n      if (item.selected) {\n        tem.push(item.key);\n      }\n      setSelectedRowsDefault(tem);\n    });\n  }, []);\n\n  useEffect(() => {\n    cols.forEach((item) => {\n      switch (item) {\n        case \"ytStory\":\n          setYtStory(true);\n          setIsYoutubePresent(true);\n          break;\n        case \"ytVideo\":\n          setYtVideo(true);\n          setIsYoutubePresent(true);\n          break;\n        case \"igStatic\":\n          setIgStatic(true);\n          setIsInstaPresent(true);\n          break;\n        case \"igVideo\":\n          setIgVideo(true);\n          setIsInstaPresent(true);\n          break;\n        case \"igtv\":\n          setIgtv(true);\n          setIsInstaPresent(true);\n          break;\n        case \"igReel\":\n          setIgReels(true);\n          setIsInstaPresent(true);\n          break;\n        case \"igStory\":\n          setIgStory(true);\n          setIsInstaPresent(true);\n          break;\n        default:\n          break;\n      }\n    });\n    setLoading(false);\n  }, []);\n\n  const searchInput = useRef(null);\n\n  const rowSelection = {\n    selectedRowKeys: selectedRowsDefault,\n    // selectedRows: selectedRowsDefault,\n    onChange: (selectedRowKeys, selectedRows) => {\n      // console.log(\n      //   `selectedRowKeys: ${selectedRowKeys}`,\n      //   \"selectedRows: \",\n      //   selectedRows\n      // );\n      setSelectedRowsDefault(selectedRowKeys);\n    },\n    getCheckboxProps: (record) => ({\n      disabled: record.name === \"Disabled User\",\n      // Column configuration not to be checked\n      name: record.name,\n    }),\n  };\n\n  const getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          // ref={(node) => {\n          //   searchInput = node;\n          // }}\n          ref={searchInput}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button\n            onClick={() => handleReset(clearFilters)}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    ),\n    onFilter: (value, record) => {\n      if (record[dataIndex]) {\n        return record[dataIndex]\n          .toString()\n          .toLowerCase()\n          .includes(value.toLowerCase());\n      }\n      // record[dataIndex]\n      //   ? record[dataIndex]\n      //       .toString()\n      //       .toLowerCase()\n      //       .includes(value.toLowerCase())\n      //   : \"\";\n      setData(record[dataIndex]);\n    },\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => searchInput.current.select(), 100);\n      }\n    },\n    // render: (text) =>\n    //   searchedColumn === dataIndex ? (\n    //     <Highlighter\n    //       highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n    //       searchWords={[searchText]}\n    //       autoEscape\n    //       textToHighlight={text ? text.toString() : \"\"}\n    //     />\n    //   ) : (\n    //     text\n    //   ),\n  });\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    // setState({\n    //   searchText: selectedKeys[0],\n    //   searchedColumn: dataIndex,\n    // });\n    setSearchText(selectedKeys[0]);\n    console.log(selectedKeys, dataIndex);\n    setSearchedColumn(dataIndex);\n  };\n\n  const handleSave = (row) => {\n    const newData = [...data];\n    const index = newData.findIndex((item) => row.key === item.key);\n    const item = newData[index];\n    newData.splice(index, 1, { ...item, ...row });\n    setData(newData);\n  };\n\n  const handleReset = (clearFilters) => {\n    clearFilters();\n    setSearchText(\"\");\n  };\n  const columnData = [\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      hidden: false,\n      key: \"name\",\n      width: 200,\n      ...getColumnSearchProps(\"name\"),\n      fixed: \"left\",\n      className: \"name-header\",\n      // filters: [\n      //   {\n      //     text: \"Joe\",\n      //     value: \"Joe\",\n      //   },\n      //   {\n      //     text: \"John\",\n      //     value: \"John\",\n      //   },\n      // ],\n      // onFilter: (value, record) => record.name.indexOf(value) === 0,\n    },\n    {\n      title: \"YouTube\",\n      hidden: !isYoutubePresent,\n      className: \"brand-details-header\",\n      children: [\n        {\n          title: \"Subscribers\",\n          dataIndex: \"street\",\n          key: \"street\",\n          className: \"brand-link-header\",\n          hidden: !isYoutubePresent,\n          editable: true,\n          width: 100,\n          // sorter: (a, b) => a.age - b.age,\n          render: (link) => <p className=\"single-line-text\">{link}</p>,\n        },\n        {\n          title: \"URL\",\n          dataIndex: \"key\",\n          className: \"brand-clicks-header\",\n          hidden: !isYoutubePresent,\n          key: \"key\",\n          width: 120,\n          render: (text) => (\n            <div>\n              <p className=\"single-line-text\">{text}</p>\n            </div>\n          ),\n          // sorter: (a, b) => a.age - b.age,\n        },\n        {\n          title: \"Influencer ₹\",\n          dataIndex: \"street\",\n          key: \"street\",\n          className: \"brand-clicks-header\",\n          hidden: !isYoutubePresent,\n          editable: true,\n          width: 100,\n          // sorter: (a, b) => a.age - b.age,\n          render: (link) => <p className=\"single-line-text\">{link}</p>,\n        },\n        {\n          title: \"Brand ₹\",\n          dataIndex: \"key\",\n          className: \"brand-clicks-header\",\n          hidden: !isYoutubePresent,\n          key: \"key\",\n          width: 120,\n          render: (text) => (\n            <div>\n              <p className=\"single-line-text\">{text}</p>\n            </div>\n          ),\n          // sorter: (a, b) => a.age - b.age,\n        },\n      ],\n    },\n    {\n      title: \"Instagram\",\n      hidden: !isInstaPresent,\n      className: \"analysis-header main-analysis-header\",\n      children: [\n        {\n          title: \" \",\n          key: \"blank\",\n          hidden: !isInstaPresent,\n          className: \"analysis-header yt-story-header\",\n          children: [\n            {\n              title: \"Followers\",\n              dataIndex: \"igFollowers\",\n              key: \"igFollowers\",\n              hidden: !isInstaPresent,\n              editable: true,\n              width: 100,\n              className: \"analysis-inner-header inner-header-left\",\n              render: (link) => <p className=\"single-line-text\">{link}</p>,\n            },\n            {\n              title: \"URL\",\n              dataIndex: \"igUrl\",\n              key: \"igUrl\",\n              hidden: !isInstaPresent,\n              width: 80,\n              className: \"analysis-inner-header inner-header-center\",\n              render: (text) => (\n                <div>\n                  <p className=\"single-line-text\">{text}</p>\n                </div>\n              ),\n            },\n          ],\n        },\n        {\n          title: \"Influencer ₹\",\n          hidden: !isInstaPresent,\n          className: \"analysis-header yt-story-header\",\n          children: [\n            {\n              title: \"Static\",\n              dataIndex: \"igStatic\",\n              key: \"igStatic\",\n              hidden: !igStatic,\n              editable: true,\n              width: 100,\n              className: \"analysis-inner-header inner-header-left\",\n              render: (link) => <p className=\"single-line-text\">{link}</p>,\n            },\n            {\n              title: \"Video\",\n              dataIndex: \"igVideo\",\n              key: \"igVideo\",\n              hidden: !igVideo,\n              width: 80,\n              className: \"analysis-inner-header inner-header-center\",\n              render: (text) => (\n                <div>\n                  <p className=\"single-line-text\">{text}</p>\n                </div>\n              ),\n            },\n            {\n              title: \"IGTV\",\n              dataIndex: \"igtvInfluencer\",\n              key: \"igtvInfluencer\",\n              hidden: !igtv,\n              width: 120,\n              className: \"analysis-inner-header inner-header-right\",\n              render: (text) => (\n                <div>\n                  <p className=\"single-line-text\">{text}</p>\n                </div>\n              ),\n            },\n            {\n              title: \"Story\",\n              dataIndex: \"igStoryInfluencer\",\n              key: \"igStoryInfluencer\",\n              hidden: !igStory,\n              width: 120,\n              className: \"analysis-inner-header inner-header-right\",\n              render: (text) => (\n                <div>\n                  <p className=\"single-line-text\">{text}</p>\n                </div>\n              ),\n            },\n            {\n              title: \"Reel\",\n              dataIndex: \"igReelInfluencer\",\n              key: \"igReelInfluencer\",\n              hidden: !igReels,\n              width: 120,\n              className: \"analysis-inner-header inner-header-right\",\n              render: (text) => (\n                <div>\n                  <p className=\"single-line-text\">{text}</p>\n                </div>\n              ),\n            },\n          ],\n        },\n        {\n          title: \"Brand ₹\",\n          key: \"brand\",\n          hidden: !isInstaPresent,\n          className: \"analysis-header ig-static-header\",\n          children: [\n            {\n              title: \"Static\",\n              dataIndex: \"igStaticLink\",\n              key: \"igStaticLink\",\n              hidden: !igStatic,\n              editable: true,\n              width: 100,\n              className: \"analysis-inner-header inner-header-left\",\n              render: (link) => <p className=\"single-line-text\">{link}</p>,\n            },\n            {\n              title: \"Video\",\n              dataIndex: \"igVideo\",\n              key: \"igVideo\",\n              hidden: !igVideo,\n              width: 80,\n              className: \"analysis-inner-header inner-header-center\",\n              render: (text) => (\n                <div>\n                  <p className=\"single-line-text\">{text}</p>\n                </div>\n              ),\n            },\n            {\n              title: \"IGTV\",\n              dataIndex: \"igtv\",\n              key: \"igtv\",\n              hidden: !igtv,\n              width: 120,\n              className: \"analysis-inner-header inner-header-right\",\n              render: (text) => (\n                <div>\n                  <p className=\"single-line-text\">{text}</p>\n                </div>\n              ),\n            },\n            {\n              title: \"Story\",\n              dataIndex: \"igStory\",\n              key: \"igStory\",\n              hidden: !igStory,\n              width: 120,\n              className: \"analysis-inner-header inner-header-right\",\n              render: (text) => (\n                <div>\n                  <p className=\"single-line-text\">{text}</p>\n                </div>\n              ),\n            },\n            {\n              title: \"Reel\",\n              dataIndex: \"igReel\",\n              key: \"igReel\",\n              hidden: !igReels,\n              width: 120,\n              className: \"analysis-inner-header inner-header-right\",\n              render: (text) => (\n                <div>\n                  <p className=\"single-line-text\">{text}</p>\n                </div>\n              ),\n            },\n          ],\n        },\n      ],\n    },\n  ];\n\n  //Formatted Data and Cell Editing\n\n  const components = {\n    body: {\n      row: EditableRow,\n      cell: EditableCell,\n    },\n  };\n\n  // const colsWithoutIgStatic = columnData.filter((col) => col.dataIndex !== 'igStatic');\n\n  // const colsWithoutIgStatic = columnData.filter((col) => col.dataIndex !== 'igStatic');\n\n  // const colsWithoutIgStatic = columnData.filter((col) => col.dataIndex !== 'igStatic');\n\n  // const colsWithoutIgStatic = columnData.filter((col) => col.dataIndex !== 'igStatic');\n\n  // const filteredColumns = columnData.filter((col) => {\n  //   if (col.children && col.children.length) {\n  //     let tempItem = col.children.filter((item) => item.hidden !== true);\n  //     console.log({ tempItem });\n  //     console.log(\"Inside\")\n  //     return tempItem;\n  //   }\n  //   console.log(\"Outside\")\n  //   return col.hidden !== true;\n  // });\n\n  // console.log(filteredColumns);\n\n  useEffect(() => {\n    const filterColumns = () => {\n      let total = columnData.filter((iCol) => iCol.hidden === false);\n      let temp = [];\n      let tempCol = {};\n      let innerTemp = [];\n      let innerTempCol = {};\n      total.forEach((col) => {\n        if (col.children) {\n          tempCol = col;\n          console.log(tempCol);\n          temp = col.children.filter((item) => item.hidden === false);\n          col.children.forEach((innerChild) => {\n            if (innerChild.children) {\n              innerTempCol = innerChild;\n              innerTemp = innerChild.children.filter(\n                (innerItem) => innerItem.hidden === false\n              );\n              console.log(innerTemp);\n            }\n          });\n          // console.log({\n          //   loggin: temp,\n          //   tempCol,\n          //   somethng: \"Something\",\n          //   innerTempCol,\n          // });\n          // console.log(temp[temp.indexOf(innerTempCol)], \"Hello\");\n          if (\n            temp[temp.indexOf(innerTempCol)] &&\n            temp[temp.indexOf(innerTempCol)].children\n          ) {\n            // console.log(temp[temp.indexOf(innerTempCol)].children, \"Children\");\n            temp[temp.indexOf(innerTempCol)].children = innerTemp;\n          }\n        }\n      });\n      total[columnData.indexOf(tempCol)] = { ...tempCol, children: temp };\n      return total;\n    };\n\n    setFilteredColumns(filterColumns());\n  }, []);\n\n  // console.log(filterColumns());\n\n  // const filteredColumns = columnData.filter((col) => {\n  //   // if (col.children) return col.children.some((item) => item.hidden === false);\n  //   // else return col;\n\n  //   if (col.children)\n  //     console.log({\n  //       children: col.children,\n  //       something: col.children.filter((item) => item.hidden === false),\n  //     });\n  //   return col.children\n  //     ? col.children.filter((item) => item.hidden === false)\n  //     : col;\n  // });\n\n  // const filteredColumns = filterColumns();\n\n  // console.log(filteredColumns);\n\n  const columns = filteredColumns.map((col) => {\n    let temp = [];\n    let innerChildren = [];\n    if (!col.editable) {\n      // console.log(col);\n      if (col.children) {\n        temp = col.children;\n        col.children.forEach((child) => {\n          if (child.children) {\n            //For Inner Children inside analysis > IG > Children\n            innerChildren = child.children;\n\n            child.children.forEach((innerChild) => {\n              if (innerChild.editable) {\n                // innerChildren.push({\n                //   ...innerChild,\n                //   onCell: (record) => ({\n                //     record,\n                //     editable: innerChild.editable,\n                //     dataIndex: innerChild.dataIndex,\n                //     title: innerChild.title,\n                //     handleSave: handleSave,\n                //   }),\n                // });\n                innerChildren[innerChildren.indexOf(innerChild)] = {\n                  ...innerChild,\n                  onCell: (record) => ({\n                    record,\n                    editable: innerChild.editable,\n                    dataIndex: innerChild.dataIndex,\n                    title: innerChild.title,\n                    handleSave: handleSave,\n                  }),\n                };\n              }\n            });\n          }\n          if (child.editable) {\n            // temp.push({\n            //   ...child,\n            //   children: innerChildren,\n            //   onCell: (record) => ({\n            //     record,\n            //     editable: child.editable,\n            //     dataIndex: child.dataIndex,\n            //     title: child.title,\n            //     handleSave: handleSave,\n            //   }),\n            // });\n            temp[temp.indexOf(child)] = {\n              ...child,\n              children: innerChildren,\n              onCell: (record) => ({\n                record,\n                editable: child.editable,\n                dataIndex: child.dataIndex,\n                title: child.title,\n                handleSave: handleSave,\n              }),\n            };\n          }\n        });\n\n        return {\n          ...col,\n          children: temp,\n        };\n      }\n      return col;\n    }\n    console.log(col);\n    return {\n      ...col,\n      onCell: (record) => ({\n        record,\n        editable: col.editable,\n        dataIndex: col.dataIndex,\n        title: col.title,\n        handleSave: handleSave,\n      }),\n    };\n  });\n\n  return (\n    <>\n      <Table\n        rowSelection={{\n          type: \"checkbox\",\n          ...rowSelection,\n        }}\n        onRow={(record, rowIndex) => {\n          return {\n            onClick: () => {\n              // if (!record.selected) {\n              //   setSelectedRowsDefault([...selectedRowsDefault, rowIndex]);\n              // }\n              // console.log({ record, rowIndex });\n            },\n          };\n        }}\n        loading={loading}\n        className=\"data-table\"\n        components={components}\n        rowClassName={(record, index) =>\n          index % 2 === 0 ? \"editable-row dark-cell\" : \"editable-row light-cell\"\n        }\n        columns={columns}\n        dataSource={data}\n        // bordered\n        size=\"middle\"\n        scroll={{ x: \"calc(700px + 50%)\", y: \"70vh\" }}\n      />\n    </>\n  );\n};\n\nexport default CustomDraftTable;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport CustomDraftTable from \"./CustomDraftTable\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <App /> */}\n    <CustomDraftTable />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}